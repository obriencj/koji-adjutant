[metadata]
name = koji-adjutant
version = 0.1.0
description = Podman-based koji build daemon worker, replacing mock chroots with containers
long_description = file: README.md
long_description_content_type = text/markdown
author = Koji-Adjutant Team
author_email = koji-adjutant@example.com
license = GPL-2.0-or-later
license_files = LICENSE
url = https://github.com/koji-adjutant/koji-adjutant
classifiers =
    Development Status :: 3 - Alpha
    Intended Audience :: Developers
    License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)
    Operating System :: POSIX :: Linux
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12
    Topic :: Software Development :: Build Tools
    Topic :: System :: Archiving :: Packaging

[options]
python_requires = >=3.11
packages = find:
package_dir =
    = .
install_requires =
    # Podman Python API
    podman >= 4.0.0
    # Web framework for monitoring dashboard
    Flask >= 3.0.0
    # Koji - typically system-installed, but include for completeness
    # Note: koji package is usually installed system-wide from RPM
    # Add to requirements.txt or handle via system package manager

[options.packages.find]
where = .
include = koji_adjutant*
exclude =
    tests*
    docs*
    plan*

[options.extras_require]
dev =
    pytest >= 8.0.0
    pytest-cov >= 4.0.0
    pytest-xdist >= 3.0.0  # For parallel test execution
    black >= 24.0.0
    isort >= 5.13.0
    flake8 >= 7.0.0
    mypy >= 1.8.0
    types-setuptools

[options.entry_points]
console_scripts =
    kojid = koji_adjutant.kojid:main_entrypoint

# ============================================================================
# Pytest Configuration
# ============================================================================
[tool:pytest]
# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output options
addopts =
    -v
    --strict-markers
    --strict-config
    --showlocals
    --tb=short
    --durations=10
    -ra
    # Enable coverage reporting
    --cov=koji_adjutant
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=60

# Register custom markers
markers =
    requires_podman: marks tests that require podman (skip if unavailable)

# Coverage configuration
[coverage:run]
source = koji_adjutant
omit =
    */tests/*
    */__pycache__/*
    */test_*.py
    */__init__.py
    */kojid.py

[coverage:report]
precision = 2
show_missing = True
skip_covered = False
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod

# ============================================================================
# Code Quality Tools Configuration
# ============================================================================

# Flake8 Configuration
[flake8]
max-line-length = 100
extend-ignore =
    # Allow long lines in URLs, comments
    E501
    # Allow unused imports in __init__.py (common pattern)
    F401
exclude =
    .git,
    __pycache__,
    .venv,
    venv,
    env,
    build,
    dist,
    *.egg-info,
    htmlcov,
    .pytest_cache,
    .mypy_cache
per-file-ignores =
    __init__.py:F401  # Allow unused imports in __init__.py
    */test_*.py:F811  # Allow redefined names in tests
    */tests/*:E203  # Allow whitespace before ':' in slices (for Black compatibility)
max-complexity = 15

# Black Configuration (via pyproject.toml or .black file)
# Note: Black primarily uses pyproject.toml, but can work with setup.cfg
# For full Black configuration, consider pyproject.toml or .black file
# Defaults: line-length=88, target Python versions auto-detected

# isort Configuration
[isort]
profile = black
line_length = 100
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
ensure_newline_before_comments = True
skip_glob =
    */migrations/*
    */__pycache__/*
    */build/*
    */dist/*
    */htmlcov/*

# mypy Configuration
[mypy]
python_version = 3.11
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = False
disallow_incomplete_defs = False
check_untyped_defs = True
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
strict_optional = True
ignore_missing_imports = True
follow_imports = normal
show_error_codes = True

[mypy-podman.*]
ignore_missing_imports = True

[mypy-koji.*]
ignore_missing_imports = True

[mypy-Cheetah.*]
ignore_missing_imports = True

[mypy-dnf.*]
ignore_missing_imports = True

# ============================================================================
# Tox Configuration
# ============================================================================
[tox:tox]
envlist = py3, lint
minversion = 4.0
isolated_build = true

[testenv]
description = Run pytest test suite
usedevelop = true
deps =
    pytest >= 8.0.0
    pytest-cov >= 4.0.0
    pytest-xdist >= 3.0.0
commands =
    pytest {posargs:-v}
passenv = PATH,HOME,USER

[testenv:py3]
description = Python 3 test environment
basepython = python3

[testenv:lint]
description = Run code quality checks (flake8, isort, mypy)
deps =
    flake8 >= 7.0.0
    isort >= 5.13.0
    mypy >= 1.8.0
    black >= 24.0.0
    types-setuptools
commands =
    flake8 koji_adjutant tests
    isort --check-only koji_adjutant tests
    black --check koji_adjutant tests
    mypy koji_adjutant

[testenv:coverage]
description = Generate test coverage report
deps =
    {[testenv]deps}
commands =
    pytest --cov=koji_adjutant --cov-report=html --cov-report=term-missing

[testenv:build]
description = Build wheel distribution
skip_install = true
deps =
    build >= 0.10.0
    wheel >= 0.40.0
commands =
    python3 -m build --wheel
    python3 -c "import os; [print(f'Built: {{f}}') for f in os.listdir('dist') if f.endswith('.whl')]"
